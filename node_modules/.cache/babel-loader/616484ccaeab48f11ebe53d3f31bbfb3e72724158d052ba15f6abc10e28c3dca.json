{"ast":null,"code":"// ——————————————————————————————————————————————————\n// TextScramble\n// ——————————————————————————————————————————————————\nfunction TextScrambleTest() {\n  class TextScramble {\n    constructor(el) {\n      this.el = el;\n      this.chars = '!<>-_\\\\/[]{}—=+*^?#________';\n      this.update = this.update.bind(this);\n    }\n    setText(newText) {\n      const oldText = this.el.innerText;\n      const length = Math.max(oldText.length, newText.length);\n      const promise = new Promise(resolve => this.resolve = resolve);\n      this.queue = [];\n      for (let i = 0; i < length; i++) {\n        const from = oldText[i] || '';\n        const to = newText[i] || '';\n        const start = Math.floor(Math.random() * 40);\n        const end = start + Math.floor(Math.random() * 40);\n        this.queue.push({\n          from,\n          to,\n          start,\n          end\n        });\n      }\n      cancelAnimationFrame(this.frameRequest);\n      this.frame = 0;\n      this.update();\n      return promise;\n    }\n    update() {\n      let output = '';\n      let complete = 0;\n      for (let i = 0, n = this.queue.length; i < n; i++) {\n        let {\n          from,\n          to,\n          start,\n          end,\n          char\n        } = this.queue[i];\n        if (this.frame >= end) {\n          complete++;\n          output += to;\n        } else if (this.frame >= start) {\n          if (!char || Math.random() < 0.28) {\n            char = this.randomChar();\n            this.queue[i].char = char;\n          }\n          output += `<span class=\"dud\">${char}</span>`;\n        } else {\n          output += from;\n        }\n      }\n      this.el.innerHTML = output;\n      if (complete === this.queue.length) {\n        this.resolve();\n      } else {\n        this.frameRequest = requestAnimationFrame(this.update);\n        this.frame++;\n      }\n    }\n    randomChar() {\n      return this.chars[Math.floor(Math.random() * this.chars.length)];\n    }\n  }\n\n  // ——————————————————————————————————————————————————\n  // Example\n  // ——————————————————————————————————————————————————\n\n  const phrases = ['Neo,', 'sooner or later', \"you're going to realize\", 'just as I did', \"that there's a difference\", 'between knowing the path', 'and walking the path'];\n  const el = document.querySelector('.containerTextHeader');\n  const fx = new TextScramble(el);\n  let counter = 0;\n  const next = () => {\n    fx.setText(phrases[counter]).then(() => {\n      setTimeout(next, 800);\n    });\n    counter = (counter + 1) % phrases.length;\n  };\n  next();\n}\n_c = TextScrambleTest;\nexport default TextScrambleTest;\nvar _c;\n$RefreshReg$(_c, \"TextScrambleTest\");","map":{"version":3,"names":["TextScrambleTest","TextScramble","constructor","el","chars","update","bind","setText","newText","oldText","innerText","length","Math","max","promise","Promise","resolve","queue","i","from","to","start","floor","random","end","push","cancelAnimationFrame","frameRequest","frame","output","complete","n","char","randomChar","innerHTML","requestAnimationFrame","phrases","document","querySelector","fx","counter","next","then","setTimeout"],"sources":["C:/Users/Yanguel/Desktop/Portfolio/portfolio-yanguel/src/components/textScramble/index.jsx"],"sourcesContent":["// ——————————————————————————————————————————————————\r\n// TextScramble\r\n// ——————————————————————————————————————————————————\r\nfunction TextScrambleTest() {\r\n  class TextScramble {\r\n    constructor(el) {\r\n      this.el = el\r\n      this.chars = '!<>-_\\\\/[]{}—=+*^?#________'\r\n      this.update = this.update.bind(this)\r\n    }\r\n    setText(newText) {\r\n      const oldText = this.el.innerText\r\n      const length = Math.max(oldText.length, newText.length)\r\n      const promise = new Promise((resolve) => (this.resolve = resolve))\r\n      this.queue = []\r\n      for (let i = 0; i < length; i++) {\r\n        const from = oldText[i] || ''\r\n        const to = newText[i] || ''\r\n        const start = Math.floor(Math.random() * 40)\r\n        const end = start + Math.floor(Math.random() * 40)\r\n        this.queue.push({ from, to, start, end })\r\n      }\r\n      cancelAnimationFrame(this.frameRequest)\r\n      this.frame = 0\r\n      this.update()\r\n      return promise\r\n    }\r\n    update() {\r\n      let output = ''\r\n      let complete = 0\r\n      for (let i = 0, n = this.queue.length; i < n; i++) {\r\n        let { from, to, start, end, char } = this.queue[i]\r\n        if (this.frame >= end) {\r\n          complete++\r\n          output += to\r\n        } else if (this.frame >= start) {\r\n          if (!char || Math.random() < 0.28) {\r\n            char = this.randomChar()\r\n            this.queue[i].char = char\r\n          }\r\n          output += `<span class=\"dud\">${char}</span>`\r\n        } else {\r\n          output += from\r\n        }\r\n      }\r\n      this.el.innerHTML = output\r\n      if (complete === this.queue.length) {\r\n        this.resolve()\r\n      } else {\r\n        this.frameRequest = requestAnimationFrame(this.update)\r\n        this.frame++\r\n      }\r\n    }\r\n    randomChar() {\r\n      return this.chars[Math.floor(Math.random() * this.chars.length)]\r\n    }\r\n  }\r\n\r\n  // ——————————————————————————————————————————————————\r\n  // Example\r\n  // ——————————————————————————————————————————————————\r\n\r\n  const phrases = [\r\n    'Neo,',\r\n    'sooner or later',\r\n    \"you're going to realize\",\r\n    'just as I did',\r\n    \"that there's a difference\",\r\n    'between knowing the path',\r\n    'and walking the path',\r\n  ]\r\n\r\n  const el = document.querySelector('.containerTextHeader')\r\n  const fx = new TextScramble(el)\r\n\r\n  let counter = 0\r\n  const next = () => {\r\n    fx.setText(phrases[counter]).then(() => {\r\n      setTimeout(next, 800)\r\n    })\r\n    counter = (counter + 1) % phrases.length\r\n  }\r\n\r\n  next()\r\n}\r\nexport default TextScrambleTest\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}